{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DataP1Output",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "DataP2Output",
						"type": "DatasetReference"
					},
					"name": "source2"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "UnionOutput",
						"type": "DatasetReference"
					},
					"name": "sink1",
					"rejectedDataLinkedService": {
						"referenceName": "ADLS_Source",
						"type": "LinkedServiceReference"
					}
				}
			],
			"transformations": [
				{
					"name": "union1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Year as string,",
				"          Industry_aggregation as string,",
				"          Industry_code as string,",
				"          Industry_name as string,",
				"          Units as string,",
				"          Variable_code as string,",
				"          Variable_name as string,",
				"          Variable_category as string,",
				"          Value as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source(output(",
				"          Year as string,",
				"          Industry_aggregation as string,",
				"          Industry_code as string,",
				"          Industry_name as string,",
				"          Units as string,",
				"          Variable_code as string,",
				"          Variable_name as string,",
				"          Variable_category as string,",
				"          Value as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source2",
				"source1, source2 union(byName: true)~> union1",
				"union1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Year as string,",
				"          Industry_aggregation as string,",
				"          Industry_code as string,",
				"          Industry_name as string,",
				"          Units as string,",
				"          Variable_code as string,",
				"          Variable_name as string,",
				"          Variable_category as string,",
				"          Value as string",
				"     ),",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     saveOrder: 1) ~> sink1"
			]
		}
	}
}